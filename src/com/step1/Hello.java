package com.step1;
// 에러에는 두가지가 있다
// 컴파일타임에러(컨벤션,약속을 지키고 있니?)
// 런타임에러(실행 시 발생하는 에러,논리의 오류)- 오류 수정이 어렵다...논리적이라 ㅋ
// 컴파일에러가 발생하면 XXX.class가 만들어지지 않는다.
// 이름으로 인스턴스화를 한다(중급) - 재사용성과 이식성을 누릴 수 있다.
// Public(접근제한자) - 오픈소스, 나눔의 의미한다. 
// class(예약어, 약속) - 클래스 이름
// 소프트웨어는 메모리에 로딩되어 눈에 보이지않기 때문에 확인하기 위해서는 호출해야한다.
// 요청하고 싶을 땐 ex)아이디와 비번을 파라미터에 작성한다.
public class Hello { // 1. 클래스 선언 - 문서의 이름을 정해준다.
	// 어떤 이름 뒤에 괄호가 있으면 메소드라고 한다
	// 가장 먼저 실행되므로 main스레드라고도 한다 -> 스레드가 있으면 우선순위를 정할 수 있다
	// = entry point 이다
	// 개발자가 호출하는 메소드는 아니다
	// 시스템이 호출하는 함수는 callback 함수
	// 메인메소드가 있어야 실행이 가능하다
	// 생략할 수 있다. 단, 실행할 수 없다
	// 메인메소드는 선언 시에 static이 있다.(기타수정자) - 싱글톤이다(하나를 공유하다)
	public static void main(String[] args) { // 변수 args는 파라미터 자리이며, 배열이다.
		// TODO Auto-generated method stub
		// System은 현재 내가 사용하고 있는 pc이다.
		// out은 속성으로 출력을 의미한다.
		// 문자열 상수이다.
		System.out.println("안녕"); // 괄호 안에 문자열은 값이다. 타입은 문자열		
	}
}

